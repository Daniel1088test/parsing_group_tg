# Generated by Django 5.1.7 on 2025-04-10 10:54

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="BotSettings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "bot_token",
                    models.CharField(
                        default="8102516142:AAFTsVXXujHHKoX2KZGqZXBHPBznfgh7kg0",
                        max_length=255,
                    ),
                ),
                (
                    "bot_username",
                    models.CharField(
                        default="chan_parsing_mon_bot",
                        help_text="Bot username without @ symbol",
                        max_length=100,
                    ),
                ),
                (
                    "bot_name",
                    models.CharField(
                        default="Channel Parser Bot",
                        help_text="Display name of your bot",
                        max_length=100,
                    ),
                ),
                ("default_api_id", models.IntegerField(default=2496)),
                (
                    "default_api_hash",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "polling_interval",
                    models.IntegerField(
                        default=30,
                        help_text="How often to check for new messages (in seconds)",
                    ),
                ),
                (
                    "max_messages_per_channel",
                    models.IntegerField(
                        default=10,
                        help_text="Maximum number of messages to fetch per channel",
                    ),
                ),
                (
                    "auth_guide_text",
                    models.TextField(
                        default="Please follow these steps to authorize your Telegram account",
                        help_text="Text shown during authorization process",
                    ),
                ),
                (
                    "welcome_message",
                    models.TextField(
                        default="Welcome to the Channel Parser Bot. Use the menu below:",
                        help_text="Welcome message shown to users",
                    ),
                ),
                (
                    "menu_style",
                    models.CharField(
                        choices=[
                            ("default", "Default Layout"),
                            ("compact", "Compact Layout"),
                            ("expanded", "Expanded Layout"),
                        ],
                        default="default",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Bot Settings",
                "verbose_name_plural": "Bot Settings",
            },
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Category",
                "verbose_name_plural": "Categories",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="TelegramChannel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("channel_id", models.CharField(max_length=255, unique=True)),
                ("title", models.CharField(max_length=255)),
                ("url", models.URLField(blank=True, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("members_count", models.IntegerField(default=0)),
                ("username", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "avatar",
                    models.ImageField(
                        blank=True, null=True, upload_to="channel_avatars/"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Telegram Channel",
                "verbose_name_plural": "Telegram Channels",
            },
        ),
        migrations.CreateModel(
            name="TelegramSession",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("session_name", models.CharField(default="default", max_length=255)),
                (
                    "phone",
                    models.CharField(
                        max_length=20, unique=True, verbose_name="Номер телефону"
                    ),
                ),
                (
                    "api_id",
                    models.CharField(
                        blank=True, max_length=20, null=True, verbose_name="API ID"
                    ),
                ),
                (
                    "api_hash",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="API Hash"
                    ),
                ),
                (
                    "session_string",
                    models.TextField(blank=True, null=True, verbose_name="Рядок сесії"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Активна"),
                ),
                ("is_bot", models.BooleanField(default=False, verbose_name="Це бот")),
                (
                    "is_authorized",
                    models.BooleanField(default=False, verbose_name="Авторизована"),
                ),
                (
                    "verification_code",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("password", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "session_data",
                    models.TextField(
                        blank=True,
                        help_text="Encoded session data for persistent storage",
                        null=True,
                    ),
                ),
                (
                    "auth_token",
                    models.CharField(
                        blank=True,
                        help_text="Token for authorizing this session via bot",
                        max_length=255,
                        null=True,
                    ),
                ),
                ("username", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "phone_code_hash",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "needs_auth",
                    models.BooleanField(
                        default=True,
                        help_text="Indicates if this session needs to be authorized",
                    ),
                ),
                (
                    "session_file",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Telegram сесія",
                "verbose_name_plural": "Telegram сесії",
                "db_table": "admin_panel_telegramsession",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Channel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("url", models.URLField(max_length=255)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="channels",
                        to="admin_panel.category",
                    ),
                ),
                (
                    "session",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="admin_panel.telegramsession",
                    ),
                ),
            ],
            options={
                "verbose_name": "Channel",
                "verbose_name_plural": "Channels",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Message",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.TextField()),
                (
                    "media",
                    models.FileField(blank=True, null=True, upload_to="messages/"),
                ),
                ("media_type", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "original_url",
                    models.URLField(
                        blank=True,
                        help_text="Original media URL from Telegram",
                        max_length=500,
                        null=True,
                    ),
                ),
                ("telegram_message_id", models.CharField(max_length=255)),
                ("telegram_channel_id", models.CharField(max_length=255)),
                ("telegram_link", models.URLField(max_length=255)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "channel",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="admin_panel.channel",
                    ),
                ),
                (
                    "session_used",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="messages",
                        to="admin_panel.telegramsession",
                    ),
                ),
            ],
            options={
                "verbose_name": "Message",
                "verbose_name_plural": "Messages",
                "ordering": ["created_at"],
            },
        ),
        migrations.AddField(
            model_name="category",
            name="session",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="categories",
                to="admin_panel.telegramsession",
            ),
        ),
    ]
