# Generated by Django 5.1.7 on 2025-04-08 19:24

import django.db.models.deletion
from django.db import migrations, models

def check_table_exists(apps, schema_editor, table_name):
    """Перевіряє наявність таблиці в базі даних"""
    db_alias = schema_editor.connection.alias
    cursor = schema_editor.connection.cursor()
    
    # SQLite специфічна команда для перевірки
    cursor.execute(
        f"SELECT name FROM sqlite_master WHERE type='table' AND name='{table_name}';"
    )
    return cursor.fetchone() is not None

def create_telegram_channel_conditionally(apps, schema_editor):
    """Створює таблицю TelegramChannel, якщо вона ще не існує"""
    db_alias = schema_editor.connection.alias
    
    # Перевіряємо, чи існує таблиця
    if not check_table_exists(apps, schema_editor, 'admin_panel_telegramchannel'):
        # Створюємо таблицю вручну
        cursor = schema_editor.connection.cursor()
        cursor.execute("""
            CREATE TABLE "admin_panel_telegramchannel" (
                "id" integer NOT NULL PRIMARY KEY AUTOINCREMENT,
                "channel_id" varchar(255) NOT NULL UNIQUE,
                "title" varchar(255) NOT NULL,
                "url" varchar(200) NULL,
                "description" text NULL,
                "members_count" integer NOT NULL,
                "username" varchar(255) NULL,
                "avatar" varchar(100) NULL,
                "created_at" datetime NOT NULL,
                "updated_at" datetime NOT NULL
            );
        """)

class Migration(migrations.Migration):

    dependencies = [
        ("admin_panel", "0006_remove_botsettings_auth_guide_text_and_more"),
    ]

    operations = [
        migrations.RunPython(create_telegram_channel_conditionally),
        migrations.AlterModelOptions(
            name="channel",
            options={
                "ordering": ["-created_at"],
                "verbose_name": "Channel",
                "verbose_name_plural": "Channels",
            },
        ),
        migrations.AlterModelOptions(
            name="message",
            options={
                "ordering": ["-created_at"],
                "verbose_name": "Message",
                "verbose_name_plural": "Messages",
            },
        ),
        migrations.AlterModelOptions(
            name="telegramsession",
            options={
                "verbose_name": "Telegram Session",
                "verbose_name_plural": "Telegram Sessions",
            },
        ),
        migrations.AddField(
            model_name="telegramsession",
            name="is_bot",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="telegramsession",
            name="session_name",
            field=models.CharField(default="default", max_length=255),
        ),
        migrations.AddField(
            model_name="telegramsession",
            name="session_string",
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name="channel",
            name="category",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="channels",
                to="admin_panel.category",
            ),
        ),
        migrations.AlterField(
            model_name="channel",
            name="session",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="admin_panel.telegramsession",
            ),
        ),
        migrations.AlterField(
            model_name="message",
            name="channel",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="messages",
                to="admin_panel.channel",
            ),
        ),
        migrations.AlterField(
            model_name="message",
            name="telegram_channel_id",
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name="message",
            name="telegram_link",
            field=models.URLField(blank=True, max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name="message",
            name="telegram_message_id",
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name="message",
            name="text",
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name="telegramsession",
            name="api_hash",
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name="telegramsession",
            name="api_id",
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name="telegramsession",
            name="verification_code",
            field=models.CharField(blank=True, max_length=10, null=True),
        ),
    ]
